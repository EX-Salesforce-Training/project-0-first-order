public class ClassRosterTriggerHandler {
	
    public static void AutoAddCharge(List<Class_Roster__c> newStudents) {
        List<Charge__c> chargesToAdd = new List<Charge__c>();
        for (Class_Roster__c student : newStudents) {
            Integer amount = GetClassCharge(student);
            Account assAccount = GetAssociatedAccount(student);
            String chargeName = GenerateChargeName(student);
            Charge__c newCharge = CreateLinkedCharge(assAccount, amount, chargeName);
            chargesToAdd.add(newCharge);
        }
        
        Insert chargesToAdd;
    }
    
    @testVisible
    private static Integer GetClassCharge(Class_Roster__c student) {
        id classID = student.Class__c;
        
        Class__c studentClass;
        try {
        	studentClass = [SELECT id, Class_Price__c FROM Class__c WHERE id =: classID];
        }
        catch (System.QueryException e) {
            student.AddError('Student not associated with a class.');
            return 0;
        }
        
        Integer charge = Integer.valueOf(studentClass.Class_Price__c.substring(1));
        return charge;
    }
    
    @testVisible
    private static Account GetAssociatedAccount(Class_Roster__c student) {
        Contact assContact;
        Account assAccount;
        try {
        	assContact = [SELECT accountId FROM Contact WHERE id =: student.Contact__c];
        }
        catch (System.QueryException e) {
            student.AddError('Student not associated with any contacts.');
            assContact = new Contact();
        }
        
        try {
        	assAccount = [SELECT name FROM Account WHERE id =: assContact.AccountId];
        }
        catch (System.QueryException e) {
            student.AddError('Student\'s contact is not associated with an account.');
            assAccount = null;
        }
        
        return assAccount;
    }
    
    @testVisible
    private static String GenerateChargeName(Class_Roster__c student) {
        Class__c swimClass;
        Contact contact;
        try {
        	swimClass = [SELECT Class_Type__c FROM Class__c WHERE id =: student.Class__c];
        	contact = [SELECT FirstName FROM Contact WHERE id =: student.Contact__c];
        }
        catch (System.QueryException e) {
            return 'Error Charge';
        }
        
        return 'Swim Lessons - ' + swimClass.Class_Type__c + ' (' + contact.FirstName + ')';
    }
    
    @testVisible
    private static Charge__c CreateLinkedCharge(Account acc, Integer amount, String chargeName) {
        if (acc == null || amount <= 0) return null;
        
        Charge__c newCharge = new Charge__c();
        newCharge.Account__c = acc.Id;
        newCharge.Amount__c = amount;
        newCharge.name = chargeName; 
        
        return newCharge;
    }
}