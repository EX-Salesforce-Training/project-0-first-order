public class EmployeeDuplicateTriggerHandler {
    public static List<Employees__c> checkDuplicates(List<Employees__c> newEmployees) {
        //Extract SSN from new employees
        Set<String> newSSNSet = new Set<String>();
        for(Employees__c newEmployee: newEmployees) {
            if(newEmployee.Employee_SSN__c != null) {
                newSSNSet.add(newEmployee.Employee_SSN__c);
            }
        }
        //Find duplicate employees in database.
        Map<String, Employees__c> existingEmployeeMap = new Map<String, Employees__c>();
        for(Employees__c existingEmployee: [SELECT Employee_SSN__c FROM Employees__c WHERE Employee_SSN__c in :newSSNSet]) {
            existingEmployeeMap.put(existingEmployee.Employee_SSN__c, existingEmployee);
        }
        
        //Compare and throw error
        for(Employees__c newEmployee: newEmployees) {
            Employees__c duplicateEmployee = existingEmployeeMap.get(newEmployee.Employee_SSN__c);
            if(duplicateEmployee != null) {
                newEmployee.addError('ERROR: There is already an employee with that SSN: ' + duplicateEmployee.Name);
            }
        }
        return newEmployees;
    }
}
